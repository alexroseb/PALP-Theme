<div id="h-browser">
<?php # TEST DIRECT SQL QUERY

// $sql = <<<ENDSQL
// SELECT p1.resource_id AS child_id,
//                rtypes.value_resource_id AS child_type,
//                p1.property_id AS child_to_p1,
//                p1.value_resource_id AS parent_id,
//                p2.property_id AS prop2_id,
//                p2.value_resource_id AS parent2_id,
//                p3.property_id AS prop3_id,
//                p3.value_resource_id AS parent3_id,
//                p4.property_id AS prop4_id,
//                p4.value_resource_id AS parent4_id,
//                p5.property_id AS prop5_id,
//                p5.value_resource_id AS parent5_id,
//                p6.property_id AS prop6_id,
//                p6.value_resource_id AS parent6_id,
//                p7.property_id AS prop7_id,
//                p7.value_resource_id AS parent7_id 

// FROM        value p1 
// LEFT JOIN   value rtypes ON rtypes.resource_id = p1.resource_id AND rtypes.property_id = 289
// LEFT JOIN   value p2 ON p2.resource_id = p1.value_resource_id 
// LEFT JOIN   value p3 ON p3.resource_id = p2.value_resource_id 
// LEFT JOIN   value p4 ON p4.resource_id = p3.value_resource_id  
// LEFT JOIN   value p5 ON p5.resource_id = p4.value_resource_id  
// LEFT JOIN   value p6 ON p6.resource_id = p5.value_resource_id
// LEFT JOIN   value p7 ON p7.resource_id = p6.value_resource_id

// WHERE  ?  IN (p1.resource_id,
//                    p1.value_resource_id, 
//                    p2.value_resource_id, 
//                    p3.value_resource_id, 
//                    p4.value_resource_id, 
//                    p5.value_resource_id, 
//                    p6.value_resource_id, 
//                    p7.value_resource_id)

// AND (p1.property_id IN (305,313,315) OR ISNULL(p1.property_id))
// AND (p2.property_id IN (305,313,315) OR ISNULL(p2.property_id))
// AND (p3.property_id IN (305,313,315) OR ISNULL(p3.property_id))
// AND (p4.property_id IN (305,313,315) OR ISNULL(p4.property_id))
// AND (p5.property_id IN (305,313,315) OR ISNULL(p5.property_id))
// AND (p6.property_id IN (305,313,315) OR ISNULL(p6.property_id))
// AND (p7.property_id IN (305,313,315) OR ISNULL(p7.property_id))
// ENDSQL;

// $serviceLocator = $site->getServiceLocator();
// $connection = $serviceLocator->get('Omeka\Connection');

// # $limit = '100';
// $bind = array($item->id());
// $result = $connection->fetchAll($sql, $bind);
// # connection *must* be closed or it will block other queries that this page makes. 
// $connection->close();


// # echo '<pre style="display:none">';
// # echo print_r($result);
// # echo '</pre>';

?>




<?php

// $api = $serviceLocator->get('Omeka\ApiManager');

// # any hierarchy returned? If not, skip.
// if(count($result)) {

// echo "<h3>Spatial Hierarchy</h3><ul class='collapsibleList' ><li>";

// if ($result[0]['parent7_id']) {
// $response = $api->read('items', $result[0]['parent7_id']);
// $itemRepresentation = $response->getContent();
// echo $itemRepresentation->link($itemRepresentation->title());
// echo '</li><li>';
// }

// if ($result[0]['parent6_id']) {
// $response = $api->read('items', $result[0]['parent6_id']);
// $itemRepresentation = $response->getContent();
// echo $itemRepresentation->link($itemRepresentation->title());
// echo '</li><li>';
// }

// if ($result[0]['parent5_id']) {
// $response = $api->read('items', $result[0]['parent5_id']);
// $itemRepresentation = $response->getContent();
// echo $itemRepresentation->link($itemRepresentation->title());
// echo '</li><li>';
// }

// if ($result[0]['parent4_id']) {
// $response = $api->read('items', $result[0]['parent4_id']);
// $itemRepresentation = $response->getContent();
// echo $itemRepresentation->link($itemRepresentation->title());
// echo '</li><li>';
// }

// if ($result[0]['parent3_id']) {
// $response = $api->read('items', $result[0]['parent3_id']);
// $itemRepresentation = $response->getContent();
// echo $itemRepresentation->link($itemRepresentation->title());
// echo '</li><li>';
// }

// if ($result[0]['parent2_id']) {
// $response = $api->read('items', $result[0]['parent2_id']);
// $itemRepresentation = $response->getContent();
// echo $itemRepresentation->link($itemRepresentation->title());
// echo '</li><li>';
// }

// if ($result[0]['parent_id']) {
// $response = $api->read('items', $result[0]['parent_id']);
// $itemRepresentation = $response->getContent();
// echo $itemRepresentation->link($itemRepresentation->title());
// }
// }
// echo '<ul class="collapsibleList">
//             <li>
//               Example sub-item
//               <ul>
//                 <li>
//                   Sub-sub-item
//                   <ul>
//                     <li>sub-sub-sub item</li>
//                     <li>sub-sub-sub item</li>
//                   </ul>
//                 </li>
//                 <li>
//                   Sub-sub-item
//                   <ul>
//                     <li>sub-sub-sub item</li>
//                     <li>sub-sub-sub item</li>
//                   </ul>
//                 </li>
//               </ul></li></ul>';
?>

<?php
$pompeii_id = "23";
// $itemResponse = $this->api()->read('items', $item->id());
// $itemRep= $itemResponse->getContent();

$result = [
  "id" => $item->id(),
  "children" => [],
  "siblings" => [],
  "parents" => [],
];

$subjectValues = $item->subjectValues();
if($subjectValues){
  foreach ($subjectValues["p-lod:spatially-within"] as $value){
    $result['children'][] = $value->resource()->id();
  }
}

$p = $item->value("p-lod:spatially-within")->valueResource();

if ($p){

  $subjectValues = $p->subjectValues();
  foreach ($subjectValues["p-lod:spatially-within"] as $value){
    if($value->resource()->id() != $item->id()){
      $result['siblings'][] = $value->resource()->id();
    }
  }

  $i = 0;

  while($p->id() != $pompeii_id){
    $parentList = [];
    $parentList["id"] = $p->id();
    if($p->value("p-lod:geojson")){
      $parentList["geoJSON"] = $p->value("p-lod:geojson")->asHtml();
    } else {
      $parentList["geoJSON"] = "";
    }
    $parentList["siblings"] = [];
    $result["parents"]["p" . strval($i)] = $parentList;

    if($i > 0){
      $subjectValues = $p->subjectValues();
      foreach ($subjectValues["p-lod:spatially-within"] as $value){
        if($value->resource()->id() != $result["parents"]["p" . strval($i-1)]["id"]){
          $result["parents"]["p" . strval($i-1)]['siblings'][] = $value->resource()->id();
        }
      }
    }

    $i++;
    $p = $p->value("p-lod:spatially-within")->valueResource();
  }

  $result["parents"]["p" . strval($i)] = ["id" => $p->id(), "geoJSON" => $p->value("p-lod:geojson")->asHtml()];
  if($i > 0){
    $subjectValues = $p->subjectValues();
    foreach ($subjectValues["p-lod:spatially-within"] as $value){
      if($value->resource()->id() != $result["parents"]["p" . strval($i-1)]["id"]){
        $result["parents"]["p" . strval($i-1)]['siblings'][] = $value->resource()->id();
      }
    }
  }
}
?>

<h3>Spatial Hierarchy</h3>
<ul class='collapsibleList'>
  <li>
    <ul class="collapsibleList">
      <li>
         Example sub-item
      </li>
    </ul>
  </li>
</ul>

</div>
<div id="minimap">
<!-- div with geojson, populated by php call to api -->
<div id="minimap-geojson" style="display:none"><?php
echo $item->value('p-lod:geojson', ['type' => 'literal']);
?></div>


<div id="minimapid" style="width: 100px; height: 100px;display:none"></div>
<script>
// check if the item-geojson div has content and make a map if it does. 
if ($('#minimap-geojson').html().trim()) {
       $('#minimapid').show()

  var mymap = L.map('minimapid').setView([40.75, 14.485], 16);

  L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
    maxZoom: 19,
    attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',
    id: 'mapbox.streets'
  }).addTo(mymap);

       L.geoJSON(JSON.parse($('#minimap-geojson').html())).addTo(mymap)
       
}
</script>
</div>